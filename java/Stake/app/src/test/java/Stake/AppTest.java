/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Stake;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    @Test
    void pushStack() {
        Stack stack = new Stack();
        stack.push("A");
        assertEquals(
                "A",
                "A",
                stack.toString()
        );
    }

    @Test
    public void testPushMultipleValueStack() {
        Stack stack = new Stack();
        stack.push("A");
        stack.push("D");
        stack.push("H");
        stack.push("A");
        stack.push("M");

        assertEquals(
                "ADHAM",
                "ADHAM",
                stack.toString()
        );
    }

    @Test
    void testPopStack() {
        Stack stack = new Stack();
        stack.push("A");
        stack.push("D");
        stack.push("H");

        stack.pop();
        stack.pop();
        stack.pop();
        assertEquals(true, stack.isEmpty());
    }

    @Test
    void testpeekStack() {
        Stack stack = new Stack();
        stack.push("A");
        stack.push("B");
        String res = "B";
        assertEquals(res, stack.peek());
    }


    @Test
    public void testIsEmptyStack() {
        Stack stack = new Stack();
        assertEquals(true, stack.isEmpty());

    }

    @Test
    void stackQueuePseudo() {
        Pseudo test = new Pseudo();


        test.enqueue("A");
        test.enqueue("B");


        assertEquals("A", test.dequeue());


    }

    @Test
    void animal() {
        AnimalSelter animalShelter = new AnimalSelter();
        animalShelter.enqueue("Cat");
        animalShelter.enqueue("dog");
        animalShelter.enqueue("Cat");
        animalShelter.enqueue("Dog");
        assertEquals("Cat", animalShelter.dequeue("Dog"));

    }
}